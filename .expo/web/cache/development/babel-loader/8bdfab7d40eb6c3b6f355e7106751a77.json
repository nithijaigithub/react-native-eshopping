{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useInternalTheme } from \"../../../core/theming\";\nimport AnimatedText from \"../../Typography/AnimatedText\";\nvar LabelBackground = function LabelBackground(_ref) {\n  var parentState = _ref.parentState,\n    _ref$labelProps = _ref.labelProps,\n    placeholderStyle = _ref$labelProps.placeholderStyle,\n    baseLabelTranslateX = _ref$labelProps.baseLabelTranslateX,\n    topPosition = _ref$labelProps.topPosition,\n    label = _ref$labelProps.label,\n    backgroundColor = _ref$labelProps.backgroundColor,\n    roundness = _ref$labelProps.roundness,\n    labelStyle = _ref.labelStyle,\n    maxFontSizeMultiplier = _ref.maxFontSizeMultiplier,\n    themeOverrides = _ref.theme;\n  var opacity = parentState.labeled.interpolate({\n    inputRange: [0, 0.6],\n    outputRange: [1, 0]\n  });\n  var _useInternalTheme = useInternalTheme(themeOverrides),\n    isV3 = _useInternalTheme.isV3;\n  var labelTranslationX = {\n    translateX: parentState.labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [-baseLabelTranslateX, 0]\n    })\n  };\n  var labelTextScaleY = {\n    scaleY: parentState.labeled.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.2, 1]\n    })\n  };\n  var labelTextTransform = [].concat(_toConsumableArray(labelStyle.transform), [labelTextScaleY]);\n  var labelTextWidth = isV3 ? {\n    width: parentState.labelLayout.width - placeholderStyle.paddingHorizontal\n  } : {\n    maxWidth: parentState.labelLayout.width - 2 * placeholderStyle.paddingHorizontal\n  };\n  var isRounded = roundness > 6;\n  var roundedEdgeCover = isRounded ? React.createElement(Animated.View, {\n    key: \"labelBackground-view\",\n    pointerEvents: \"none\",\n    style: [StyleSheet.absoluteFill, styles.view, {\n      backgroundColor: backgroundColor,\n      maxHeight: Math.max(roundness / 3, 2),\n      bottom: Math.max(roundness, 2),\n      transform: [labelTranslationX],\n      opacity: opacity\n    }]\n  }) : null;\n  return [roundedEdgeCover, React.createElement(AnimatedText, {\n    key: \"labelBackground-text\",\n    style: [placeholderStyle, labelStyle, styles.outlinedLabel, isV3 && styles.md3OutlinedLabel, {\n      top: topPosition + 1,\n      backgroundColor: backgroundColor,\n      opacity: opacity,\n      transform: labelTextTransform\n    }, labelTextWidth],\n    numberOfLines: 1,\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }, label)];\n};\nexport default LabelBackground;\nvar styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 12\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent'\n  },\n  md3OutlinedLabel: {\n    left: 8\n  }\n});","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA;AAAA;AAG9B,SAASC,gBAAgB;AACzB,OAAOC,YAAY;AAGnB,IAAMC,eAAe,GAAG,SAAlBA,eAAe,CAAGC,MAaI;EAAA,IAZ1BC,WAAW,GAYUD,KAZrBC,WAAW;IAAA,kBAYUD,KAXrBE,UAAU;IACRC,gBAAgB,mBAAhBA,gBAAgB;IAChBC,mBAAmB,mBAAnBA,mBAAmB;IACnBC,WAAW,mBAAXA,WAAW;IACXC,KAAK,mBAALA,KAAK;IACLC,eAAe,mBAAfA,eAAe;IACfC;IAEFC,UAAU,GAGWT,KAHrBS,UAAU;IACVC,qBAAqB,GAEAV,KAFrBU,qBAAqB;IACdC,iBACcX,KADrBY,KAAK;EAEL,IAAMC,OAAO,GAAGZ,WAAW,CAACa,OAAO,CAACC,WAAW,CAAC;IAC9CC,UAAU,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;IACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC;EACpB,CAAC,CAAC;EAEF,wBAAiBpB,gBAAgB,CAACc,cAAc,CAAC;IAAzCO;EAER,IAAMC,iBAAiB,GAAG;IACxBC,UAAU,EAAEnB,WAAW,CAACa,OAAO,CAACC,WAAW,CAAC;MAC1CC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAClBC,WAAW,EAAE,CAAC,CAACb,mBAAmB,EAAE,CAAC;IACvC,CAAC;EACH,CAAC;EAED,IAAMiB,eAAe,GAAG;IACtBC,MAAM,EAAErB,WAAW,CAACa,OAAO,CAACC,WAAW,CAAC;MACtCC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAClBC,WAAW,EAAE,CAAC,GAAG,EAAE,CAAC;IACtB,CAAC;EACH,CAAC;EAED,IAAMM,kBAAkB,gCAAOd,UAAU,CAACe,SAAS,IAAEH,eAAe,EAAC;EAErE,IAAMI,cAAc,GAAGP,IAAI,GACvB;IACEQ,KAAK,EACHzB,WAAW,CAAC0B,WAAW,CAACD,KAAK,GAAGvB,gBAAgB,CAACyB;EACrD,CAAC,GACD;IACEC,QAAQ,EACN5B,WAAW,CAAC0B,WAAW,CAACD,KAAK,GAC7B,CAAC,GAAGvB,gBAAgB,CAACyB;EACzB,CAAC;EAEL,IAAME,SAAS,GAAGtB,SAAS,GAAG,CAAC;EAC/B,IAAMuB,gBAAgB,GAAGD,SAAS,GAChClC,oBAACoC,QAAQ,CAACC,IAAI;IACZC,GAAG,EAAC,sBAAsB;IAC1BC,aAAa,EAAC,MAAM;IACpBC,KAAK,EAAE,CACLC,UAAU,CAACC,YAAY,EACvBC,MAAM,CAACC,IAAI,EACX;MACEjC,eAAe,EAAfA,eAAe;MACfkC,SAAS,EAAEC,IAAI,CAACC,GAAG,CAACnC,SAAS,GAAG,CAAC,EAAE,CAAC,CAAC;MACrCoC,MAAM,EAAEF,IAAI,CAACC,GAAG,CAACnC,SAAS,EAAE,CAAC,CAAC;MAC9BgB,SAAS,EAAE,CAACL,iBAAiB,CAAC;MAC9BN;IACF,CAAC;EACD,EACF,GACA,IAAI;EAER,OAAO,CACLkB,gBAAgB,EAChBnC,oBAACE,YAAY;IACXoC,GAAG,EAAC,sBAAsB;IAC1BE,KAAK,EAAE,CACLjC,gBAAgB,EAChBM,UAAU,EACV8B,MAAM,CAACM,aAAa,EACpB3B,IAAI,IAAIqB,MAAM,CAACO,gBAAgB,EAC/B;MACEC,GAAG,EAAE1C,WAAW,GAAG,CAAC;MACpBE,eAAe,EAAfA,eAAe;MACfM,OAAO,EAAPA,OAAO;MACPW,SAAS,EAAED;IACb,CAAC,EACDE,cAAc,CACd;IACFuB,aAAa,EAAE,CAAE;IACjBtC,qBAAqB,EAAEA;EAAsB,GAE5CJ,KAAK,CACO,CAChB;AACH,CAAC;AAED,eAAeP,eAAe;AAE9B,IAAMwC,MAAM,GAAGF,UAAU,CAACY,MAAM,CAAC;EAC/BT,IAAI,EAAE;IACJU,QAAQ,EAAE,UAAU;IACpBH,GAAG,EAAE,CAAC;IACNI,IAAI,EAAE,EAAE;IACRzB,KAAK,EAAE;EACT,CAAC;EAEDmB,aAAa,EAAE;IACbK,QAAQ,EAAE,UAAU;IACpBC,IAAI,EAAE,EAAE;IACRvB,iBAAiB,EAAE,CAAC;IACpBwB,KAAK,EAAE;EACT,CAAC;EACDN,gBAAgB,EAAE;IAChBK,IAAI,EAAE;EACR;AACF,CAAC,CAAC","names":["React","useInternalTheme","AnimatedText","LabelBackground","_ref","parentState","labelProps","placeholderStyle","baseLabelTranslateX","topPosition","label","backgroundColor","roundness","labelStyle","maxFontSizeMultiplier","themeOverrides","theme","opacity","labeled","interpolate","inputRange","outputRange","isV3","labelTranslationX","translateX","labelTextScaleY","scaleY","labelTextTransform","transform","labelTextWidth","width","labelLayout","paddingHorizontal","maxWidth","isRounded","roundedEdgeCover","Animated","View","key","pointerEvents","style","StyleSheet","absoluteFill","styles","view","maxHeight","Math","max","bottom","outlinedLabel","md3OutlinedLabel","top","numberOfLines","create","position","left","color"],"sourceRoot":"../../src","sources":["LabelBackground.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}