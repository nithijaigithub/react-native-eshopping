{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../core/theming\";\nimport Icon, { isEqualIcon, isValidIcon } from \"./Icon\";\nvar CrossFadeIcon = function CrossFadeIcon(_ref) {\n  var color = _ref.color,\n    size = _ref.size,\n    source = _ref.source,\n    themeOverrides = _ref.theme;\n  var theme = useInternalTheme(themeOverrides);\n  var _React$useState = React.useState(function () {\n      return source;\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    currentIcon = _React$useState2[0],\n    setCurrentIcon = _React$useState2[1];\n  var _React$useState3 = React.useState(null),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    previousIcon = _React$useState4[0],\n    setPreviousIcon = _React$useState4[1];\n  var _React$useRef = React.useRef(new Animated.Value(1)),\n    fade = _React$useRef.current;\n  var scale = theme.animation.scale;\n  if (currentIcon !== source) {\n    setPreviousIcon(function () {\n      return currentIcon;\n    });\n    setCurrentIcon(function () {\n      return source;\n    });\n  }\n  React.useEffect(function () {\n    if (isValidIcon(previousIcon) && !isEqualIcon(previousIcon, currentIcon)) {\n      fade.setValue(1);\n      Animated.timing(fade, {\n        duration: scale * 200,\n        toValue: 0,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [currentIcon, previousIcon, fade, scale]);\n  var opacityPrev = fade;\n  var opacityNext = previousIcon ? fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: [1, 0]\n  }) : 1;\n  var rotatePrev = fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['-90deg', '0deg']\n  });\n  var rotateNext = previousIcon ? fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '-180deg']\n  }) : '0deg';\n  return React.createElement(View, {\n    style: [styles.content, {\n      height: size,\n      width: size\n    }]\n  }, previousIcon ? React.createElement(Animated.View, {\n    style: [styles.icon, {\n      opacity: opacityPrev,\n      transform: [{\n        rotate: rotatePrev\n      }]\n    }]\n  }, React.createElement(Icon, {\n    source: previousIcon,\n    size: size,\n    color: color,\n    theme: theme\n  })) : null, React.createElement(Animated.View, {\n    style: [styles.icon, {\n      opacity: opacityNext,\n      transform: [{\n        rotate: rotateNext\n      }]\n    }]\n  }, React.createElement(Icon, {\n    source: currentIcon,\n    size: size,\n    color: color,\n    theme: theme\n  })));\n};\nexport default CrossFadeIcon;\nvar styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"mappings":"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","names":["React","useInternalTheme","Icon","isEqualIcon","isValidIcon","CrossFadeIcon","_ref","color","size","source","themeOverrides","theme","useState","currentIcon","setCurrentIcon","previousIcon","setPreviousIcon","useRef","Animated","Value","fade","current","scale","animation","useEffect","setValue","timing","duration","toValue","useNativeDriver","start","opacityPrev","opacityNext","interpolate","inputRange","outputRange","rotatePrev","rotateNext","View","style","styles","content","height","width","icon","opacity","transform","rotate","StyleSheet","create","alignItems","justifyContent","position","top","left","right","bottom"],"sourceRoot":"../../src","sources":["CrossFadeIcon.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}