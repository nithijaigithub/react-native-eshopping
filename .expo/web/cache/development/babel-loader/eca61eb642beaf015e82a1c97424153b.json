{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"mode\", \"children\", \"icon\", \"avatar\", \"selected\", \"disabled\", \"accessibilityLabel\", \"closeIconAccessibilityLabel\", \"onPress\", \"onLongPress\", \"delayLongPress\", \"onClose\", \"closeIcon\", \"textStyle\", \"style\", \"theme\", \"testID\", \"selectedColor\", \"showSelectedOverlay\", \"ellipsizeMode\", \"compact\", \"elevated\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport { white } from \"../../styles/themes/v2/colors\";\nimport Icon from \"../Icon\";\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\nimport Surface from \"../Surface\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport Text from \"../Typography/Text\";\nimport { getChipColors } from \"./helpers\";\nvar Chip = function Chip(_ref) {\n  var _ref$mode = _ref.mode,\n    mode = _ref$mode === void 0 ? 'flat' : _ref$mode,\n    children = _ref.children,\n    icon = _ref.icon,\n    avatar = _ref.avatar,\n    _ref$selected = _ref.selected,\n    selected = _ref$selected === void 0 ? false : _ref$selected,\n    _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    accessibilityLabel = _ref.accessibilityLabel,\n    _ref$closeIconAccessi = _ref.closeIconAccessibilityLabel,\n    closeIconAccessibilityLabel = _ref$closeIconAccessi === void 0 ? 'Close' : _ref$closeIconAccessi,\n    onPress = _ref.onPress,\n    onLongPress = _ref.onLongPress,\n    delayLongPress = _ref.delayLongPress,\n    onClose = _ref.onClose,\n    closeIcon = _ref.closeIcon,\n    textStyle = _ref.textStyle,\n    style = _ref.style,\n    themeOverrides = _ref.theme,\n    testID = _ref.testID,\n    selectedColor = _ref.selectedColor,\n    _ref$showSelectedOver = _ref.showSelectedOverlay,\n    showSelectedOverlay = _ref$showSelectedOver === void 0 ? false : _ref$showSelectedOver,\n    ellipsizeMode = _ref.ellipsizeMode,\n    compact = _ref.compact,\n    _ref$elevated = _ref.elevated,\n    elevated = _ref$elevated === void 0 ? false : _ref$elevated,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var isV3 = theme.isV3;\n  var _React$useRef = React.useRef(new Animated.Value(isV3 && elevated ? 1 : 0)),\n    elevation = _React$useRef.current;\n  var isOutlined = mode === 'outlined';\n  var handlePressIn = function handlePressIn() {\n    var scale = theme.animation.scale;\n    Animated.timing(elevation, {\n      toValue: isV3 ? elevated ? 2 : 0 : 4,\n      duration: 200 * scale,\n      useNativeDriver: true\n    }).start();\n  };\n  var handlePressOut = function handlePressOut() {\n    var scale = theme.animation.scale;\n    Animated.timing(elevation, {\n      toValue: isV3 && elevated ? 1 : 0,\n      duration: 150 * scale,\n      useNativeDriver: true\n    }).start();\n  };\n  var opacity = isV3 ? 0.38 : 0.26;\n  var defaultBorderRadius = isV3 ? 8 : 16;\n  var iconSize = isV3 ? 18 : 16;\n  var _ref2 = StyleSheet.flatten(style) || {},\n    customBackgroundColor = _ref2.backgroundColor,\n    _ref2$borderRadius = _ref2.borderRadius,\n    borderRadius = _ref2$borderRadius === void 0 ? defaultBorderRadius : _ref2$borderRadius;\n  var _getChipColors = getChipColors({\n      isOutlined: isOutlined,\n      theme: theme,\n      selectedColor: selectedColor,\n      showSelectedOverlay: showSelectedOverlay,\n      customBackgroundColor: customBackgroundColor,\n      disabled: disabled\n    }),\n    borderColor = _getChipColors.borderColor,\n    textColor = _getChipColors.textColor,\n    iconColor = _getChipColors.iconColor,\n    underlayColor = _getChipColors.underlayColor,\n    selectedBackgroundColor = _getChipColors.selectedBackgroundColor,\n    backgroundColor = _getChipColors.backgroundColor;\n  var accessibilityState = {\n    selected: selected,\n    disabled: disabled\n  };\n  var elevationStyle = isV3 || Platform.OS === 'android' ? elevation : 0;\n  var multiplier = isV3 ? compact ? 1.5 : 2 : 1;\n  var labelSpacings = {\n    marginRight: onClose ? 0 : 8 * multiplier,\n    marginLeft: avatar || icon || selected ? 4 * multiplier : 8 * multiplier\n  };\n  var contentSpacings = {\n    paddingRight: isV3 ? onClose ? 34 : 0 : onClose ? 32 : 4\n  };\n  var labelTextStyle = _objectSpread({\n    color: textColor\n  }, isV3 ? theme.fonts.labelLarge : theme.fonts.regular);\n  return React.createElement(Surface, _extends({\n    style: [styles.container, isV3 && (isOutlined ? styles.md3OutlineContainer : styles.md3FlatContainer), !theme.isV3 && {\n      elevation: elevationStyle\n    }, {\n      backgroundColor: selected ? selectedBackgroundColor : backgroundColor,\n      borderColor: borderColor,\n      borderRadius: borderRadius\n    }, style]\n  }, theme.isV3 && {\n    elevation: elevationStyle\n  }, rest, {\n    theme: theme\n  }), React.createElement(TouchableRipple, {\n    borderless: true,\n    style: [{\n      borderRadius: borderRadius\n    }, styles.touchable],\n    onPress: onPress,\n    onPressIn: handlePressIn,\n    onPressOut: handlePressOut,\n    onLongPress: onLongPress,\n    delayLongPress: delayLongPress,\n    underlayColor: underlayColor,\n    disabled: disabled,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"button\",\n    accessibilityState: accessibilityState,\n    testID: testID,\n    theme: theme\n  }, React.createElement(View, {\n    style: [styles.content, isV3 && styles.md3Content, contentSpacings]\n  }, avatar && !icon ? React.createElement(View, {\n    style: [styles.avatarWrapper, isV3 && styles.md3AvatarWrapper, disabled && {\n      opacity: opacity\n    }]\n  }, React.isValidElement(avatar) ? React.cloneElement(avatar, {\n    style: [styles.avatar, avatar.props.style]\n  }) : avatar) : null, icon || selected ? React.createElement(View, {\n    style: [styles.icon, isV3 && styles.md3Icon, avatar ? [styles.avatar, styles.avatarSelected, isV3 && selected && styles.md3SelectedIcon] : null]\n  }, icon ? React.createElement(Icon, {\n    source: icon,\n    color: avatar ? white : !disabled && theme.isV3 ? theme.colors.primary : iconColor,\n    size: 18,\n    theme: theme\n  }) : React.createElement(MaterialCommunityIcon, {\n    name: \"check\",\n    color: avatar ? white : iconColor,\n    size: 18,\n    direction: \"ltr\"\n  })) : null, React.createElement(Text, {\n    variant: \"labelLarge\",\n    selectable: false,\n    numberOfLines: 1,\n    style: [isV3 ? styles.md3LabelText : styles.labelText, labelTextStyle, labelSpacings, textStyle],\n    ellipsizeMode: ellipsizeMode\n  }, children))), onClose ? React.createElement(View, {\n    style: styles.closeButtonStyle\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: onClose,\n    accessibilityRole: \"button\",\n    accessibilityLabel: closeIconAccessibilityLabel\n  }, React.createElement(View, {\n    style: [styles.icon, styles.closeIcon, isV3 && styles.md3CloseIcon]\n  }, closeIcon ? React.createElement(Icon, {\n    source: closeIcon,\n    color: iconColor,\n    size: iconSize\n  }) : React.createElement(MaterialCommunityIcon, {\n    name: isV3 ? 'close' : 'close-circle',\n    size: iconSize,\n    color: iconColor,\n    direction: \"ltr\"\n  })))) : null);\n};\nvar styles = StyleSheet.create({\n  container: {\n    borderWidth: StyleSheet.hairlineWidth,\n    borderStyle: 'solid',\n    flexDirection: Platform.select({\n      default: 'column',\n      web: 'row'\n    })\n  },\n  md3OutlineContainer: {\n    borderWidth: 1\n  },\n  md3FlatContainer: {\n    borderWidth: 0\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 4,\n    position: 'relative',\n    flexGrow: 1\n  },\n  md3Content: {\n    paddingLeft: 0\n  },\n  icon: {\n    padding: 4,\n    alignSelf: 'center'\n  },\n  md3Icon: {\n    paddingLeft: 8,\n    paddingRight: 0\n  },\n  closeIcon: {\n    marginRight: 4\n  },\n  md3CloseIcon: {\n    marginRight: 8,\n    padding: 0\n  },\n  labelText: {\n    minHeight: 24,\n    lineHeight: 24,\n    textAlignVertical: 'center',\n    marginVertical: 4\n  },\n  md3LabelText: {\n    textAlignVertical: 'center',\n    marginVertical: 6\n  },\n  avatar: {\n    width: 24,\n    height: 24,\n    borderRadius: 12\n  },\n  avatarWrapper: {\n    marginRight: 4\n  },\n  md3AvatarWrapper: {\n    marginLeft: 4,\n    marginRight: 0\n  },\n  md3SelectedIcon: {\n    paddingLeft: 4\n  },\n  avatarSelected: {\n    position: 'absolute',\n    top: 4,\n    left: 4,\n    backgroundColor: 'rgba(0, 0, 0, .29)'\n  },\n  closeButtonStyle: {\n    position: 'absolute',\n    right: 0,\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  touchable: {\n    flexGrow: 1\n  }\n});\nexport default Chip;","map":{"version":3,"mappings":"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","names":["React","useInternalTheme","white","Icon","MaterialCommunityIcon","Surface","TouchableRipple","Text","getChipColors","Chip","_ref","mode","children","icon","avatar","selected","disabled","accessibilityLabel","closeIconAccessibilityLabel","onPress","onLongPress","delayLongPress","onClose","closeIcon","textStyle","style","themeOverrides","theme","testID","selectedColor","showSelectedOverlay","ellipsizeMode","compact","elevated","rest","isV3","useRef","Animated","Value","elevation","current","isOutlined","handlePressIn","scale","animation","timing","toValue","duration","useNativeDriver","start","handlePressOut","opacity","defaultBorderRadius","iconSize","StyleSheet","flatten","customBackgroundColor","backgroundColor","borderRadius","borderColor","textColor","iconColor","underlayColor","selectedBackgroundColor","accessibilityState","elevationStyle","Platform","OS","multiplier","labelSpacings","marginRight","marginLeft","contentSpacings","paddingRight","labelTextStyle","color","fonts","labelLarge","regular","styles","container","md3OutlineContainer","md3FlatContainer","borderless","touchable","onPressIn","onPressOut","accessibilityRole","View","content","md3Content","avatarWrapper","md3AvatarWrapper","isValidElement","cloneElement","props","md3Icon","avatarSelected","md3SelectedIcon","source","colors","primary","size","name","direction","variant","selectable","numberOfLines","md3LabelText","labelText","closeButtonStyle","TouchableWithoutFeedback","md3CloseIcon","create","borderWidth","hairlineWidth","borderStyle","flexDirection","select","default","web","alignItems","paddingLeft","position","flexGrow","padding","alignSelf","minHeight","lineHeight","textAlignVertical","marginVertical","width","height","top","left","right","justifyContent"],"sourceRoot":"../../src","sources":["Chip.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}