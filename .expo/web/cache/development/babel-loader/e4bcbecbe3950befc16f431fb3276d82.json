{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"label\", \"size\", \"style\", \"labelStyle\", \"color\", \"theme\"],\n  _excluded2 = [\"backgroundColor\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport { white } from \"../../styles/themes/v2/colors\";\nimport getContrastingColor from \"../../utils/getContrastingColor\";\nimport Text from \"../Typography/Text\";\nvar defaultSize = 64;\nvar AvatarText = function AvatarText(_ref) {\n  var _theme$colors;\n  var label = _ref.label,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? defaultSize : _ref$size,\n    style = _ref.style,\n    labelStyle = _ref.labelStyle,\n    customColor = _ref.color,\n    themeOverrides = _ref.theme,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var _ref2 = StyleSheet.flatten(style) || {},\n    _ref2$backgroundColor = _ref2.backgroundColor,\n    backgroundColor = _ref2$backgroundColor === void 0 ? (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.primary : _ref2$backgroundColor,\n    restStyle = _objectWithoutProperties(_ref2, _excluded2);\n  var textColor = customColor != null ? customColor : getContrastingColor(backgroundColor, white, 'rgba(0, 0, 0, .54)');\n  var _useWindowDimensions = useWindowDimensions(),\n    fontScale = _useWindowDimensions.fontScale;\n  return React.createElement(View, _extends({\n    style: [{\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      backgroundColor: backgroundColor\n    }, styles.container, restStyle]\n  }, rest), React.createElement(Text, {\n    style: [styles.text, {\n      color: textColor,\n      fontSize: size / 2,\n      lineHeight: size / fontScale\n    }, labelStyle],\n    numberOfLines: 1\n  }, label));\n};\nAvatarText.displayName = 'Avatar.Text';\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    textAlign: 'center',\n    textAlignVertical: 'center'\n  }\n});\nexport default AvatarText;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA;AAAA;AAAA;AAU9B,SAASC,gBAAgB;AACzB,SAASC,KAAK;AAEd,OAAOC,mBAAmB;AAC1B,OAAOC,IAAI;AAEX,IAAMC,WAAW,GAAG,EAAE;AAgDtB,IAAMC,UAAU,GAAG,SAAbA,UAAU,CAAGC,MAQN;EAAA;EAAA,IAPXC,KAAK,GAOCD,KAPNC,KAAK;IAAA,YAOCD,KANNE,IAAI;IAAJA,IAAI,0BAAGJ,WAAW;IAClBK,KAAK,GAKCH,KALNG,KAAK;IACLC,UAAU,GAIJJ,KAJNI,UAAU;IACHC,WAAW,GAGZL,KAHNM,KAAK;IACEC,cAAc,GAEfP,KAFNQ,KAAK;IACFC,gCACGT;EACN,IAAMQ,KAAK,GAAGd,gBAAgB,CAACa,cAAc,CAAC;EAC9C,YACEG,UAAU,CAACC,OAAO,CAACR,KAAK,CAAC,IAAI,CAAC,CAAC;IAAA,8BADzBS,eAAe;IAAfA,eAAe,uDAAGJ,KAAK,CAACK,MAAM,kDAAZC,cAAcC,OAAO;IAAKC;EAEpD,IAAMC,SAAS,GACbZ,WAAW,WAAXA,WAAW,GACXT,mBAAmB,CAACgB,eAAe,EAAEjB,KAAK,EAAE,oBAAoB,CAAC;EACnE,2BAAsBuB,mBAAmB,EAAE;IAAnCC;EAER,OACE1B,oBAAC2B,IAAI;IACHjB,KAAK,EAAE,CACL;MACEkB,KAAK,EAAEnB,IAAI;MACXoB,MAAM,EAAEpB,IAAI;MACZqB,YAAY,EAAErB,IAAI,GAAG,CAAC;MACtBU;IACF,CAAC,EACDY,MAAM,CAACC,SAAS,EAChBT,SAAS;EACT,GACEP,IAAI,GAERhB,oBAACI,IAAI;IACHM,KAAK,EAAE,CACLqB,MAAM,CAACE,IAAI,EACX;MACEpB,KAAK,EAAEW,SAAS;MAChBU,QAAQ,EAAEzB,IAAI,GAAG,CAAC;MAClB0B,UAAU,EAAE1B,IAAI,GAAGiB;IACrB,CAAC,EACDf,UAAU,CACV;IACFyB,aAAa,EAAE;EAAE,GAEhB5B,KAAK,CACD,CACF;AAEX,CAAC;AAEDF,UAAU,CAAC+B,WAAW,GAAG,aAAa;AAEtC,IAAMN,MAAM,GAAGd,UAAU,CAACqB,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDP,IAAI,EAAE;IACJQ,SAAS,EAAE,QAAQ;IACnBC,iBAAiB,EAAE;EACrB;AACF,CAAC,CAAC;AAEF,eAAepC,UAAU","names":["React","useInternalTheme","white","getContrastingColor","Text","defaultSize","AvatarText","_ref","label","size","style","labelStyle","customColor","color","themeOverrides","theme","rest","StyleSheet","flatten","backgroundColor","colors","_theme$colors","primary","restStyle","textColor","useWindowDimensions","fontScale","View","width","height","borderRadius","styles","container","text","fontSize","lineHeight","numberOfLines","displayName","create","justifyContent","alignItems","textAlign","textAlignVertical"],"sourceRoot":"../../src","sources":["AvatarText.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}