{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport Text from \"../Typography/Text\";\nimport { ListAccordionGroupContext } from \"./ListAccordionGroup\";\nimport { getAccordionColors } from \"./utils\";\nvar ListAccordion = function ListAccordion(_ref) {\n  var _theme$colors, _theme$colors2;\n  var left = _ref.left,\n    right = _ref.right,\n    title = _ref.title,\n    description = _ref.description,\n    children = _ref.children,\n    themeOverrides = _ref.theme,\n    titleStyle = _ref.titleStyle,\n    descriptionStyle = _ref.descriptionStyle,\n    _ref$titleNumberOfLin = _ref.titleNumberOfLines,\n    titleNumberOfLines = _ref$titleNumberOfLin === void 0 ? 1 : _ref$titleNumberOfLin,\n    _ref$descriptionNumbe = _ref.descriptionNumberOfLines,\n    descriptionNumberOfLines = _ref$descriptionNumbe === void 0 ? 2 : _ref$descriptionNumbe,\n    style = _ref.style,\n    id = _ref.id,\n    testID = _ref.testID,\n    onPress = _ref.onPress,\n    onLongPress = _ref.onLongPress,\n    delayLongPress = _ref.delayLongPress,\n    expandedProp = _ref.expanded,\n    accessibilityLabel = _ref.accessibilityLabel,\n    _ref$pointerEvents = _ref.pointerEvents,\n    pointerEvents = _ref$pointerEvents === void 0 ? 'none' : _ref$pointerEvents;\n  var theme = useInternalTheme(themeOverrides);\n  var _React$useState = React.useState(expandedProp || false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    expanded = _React$useState2[0],\n    setExpanded = _React$useState2[1];\n  var handlePressAction = function handlePressAction(e) {\n    onPress === null || onPress === void 0 ? void 0 : onPress(e);\n    if (expandedProp === undefined) {\n      setExpanded(function (expanded) {\n        return !expanded;\n      });\n    }\n  };\n  var expandedInternal = expandedProp !== undefined ? expandedProp : expanded;\n  var groupContext = React.useContext(ListAccordionGroupContext);\n  if (groupContext !== null && !id) {\n    throw new Error('List.Accordion is used inside a List.AccordionGroup without specifying an id prop.');\n  }\n  var isExpanded = groupContext ? groupContext.expandedId === id : expandedInternal;\n  var _getAccordionColors = getAccordionColors({\n      theme: theme,\n      isExpanded: isExpanded\n    }),\n    titleColor = _getAccordionColors.titleColor,\n    descriptionColor = _getAccordionColors.descriptionColor,\n    titleTextColor = _getAccordionColors.titleTextColor,\n    rippleColor = _getAccordionColors.rippleColor;\n  var handlePress = groupContext && id !== undefined ? function () {\n    return groupContext.onAccordionPress(id);\n  } : handlePressAction;\n  return React.createElement(View, null, React.createElement(View, {\n    style: {\n      backgroundColor: theme === null || theme === void 0 ? void 0 : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.background\n    }\n  }, React.createElement(TouchableRipple, {\n    style: [styles.container, style],\n    onPress: handlePress,\n    onLongPress: onLongPress,\n    delayLongPress: delayLongPress,\n    rippleColor: rippleColor,\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      expanded: isExpanded\n    },\n    accessibilityLabel: accessibilityLabel,\n    testID: testID,\n    theme: theme,\n    borderless: true\n  }, React.createElement(View, {\n    style: styles.row,\n    pointerEvents: pointerEvents\n  }, left ? left({\n    color: isExpanded ? (_theme$colors2 = theme.colors) === null || _theme$colors2 === void 0 ? void 0 : _theme$colors2.primary : descriptionColor\n  }) : null, React.createElement(View, {\n    style: [styles.item, styles.content]\n  }, React.createElement(Text, {\n    selectable: false,\n    numberOfLines: titleNumberOfLines,\n    style: [styles.title, {\n      color: titleTextColor\n    }, titleStyle]\n  }, title), description ? React.createElement(Text, {\n    selectable: false,\n    numberOfLines: descriptionNumberOfLines,\n    style: [styles.description, {\n      color: descriptionColor\n    }, descriptionStyle]\n  }, description) : null), React.createElement(View, {\n    style: [styles.item, description ? styles.multiline : undefined]\n  }, right ? right({\n    isExpanded: isExpanded\n  }) : React.createElement(MaterialCommunityIcon, {\n    name: isExpanded ? 'chevron-up' : 'chevron-down',\n    color: theme.isV3 ? descriptionColor : titleColor,\n    size: 24,\n    direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n  }))))), isExpanded ? React.Children.map(children, function (child) {\n    if (left && React.isValidElement(child) && !child.props.left && !child.props.right) {\n      return React.cloneElement(child, {\n        style: [styles.child, child.props.style],\n        theme: theme\n      });\n    }\n    return child;\n  }) : null);\n};\nListAccordion.displayName = 'List.Accordion';\nvar styles = StyleSheet.create({\n  container: {\n    padding: 8\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  multiline: {\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 16\n  },\n  description: {\n    fontSize: 14\n  },\n  item: {\n    margin: 8\n  },\n  child: {\n    paddingLeft: 64\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center'\n  }\n});\nexport default ListAccordion;","map":{"version":3,"mappings":"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","names":["React","useInternalTheme","MaterialCommunityIcon","TouchableRipple","Text","ListAccordionGroupContext","getAccordionColors","ListAccordion","_ref","left","right","title","description","children","themeOverrides","theme","titleStyle","descriptionStyle","titleNumberOfLines","descriptionNumberOfLines","style","id","testID","onPress","onLongPress","delayLongPress","expandedProp","expanded","accessibilityLabel","pointerEvents","useState","setExpanded","handlePressAction","e","undefined","expandedInternal","groupContext","useContext","Error","isExpanded","expandedId","titleColor","descriptionColor","titleTextColor","rippleColor","handlePress","onAccordionPress","View","backgroundColor","colors","_theme$colors","background","styles","container","accessibilityRole","accessibilityState","borderless","row","color","_theme$colors2","primary","item","content","selectable","numberOfLines","multiline","name","isV3","size","direction","I18nManager","getConstants","isRTL","Children","map","child","isValidElement","props","cloneElement","displayName","StyleSheet","create","padding","flexDirection","alignItems","height","justifyContent","fontSize","margin","paddingLeft","flex"],"sourceRoot":"../../src","sources":["ListAccordion.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}