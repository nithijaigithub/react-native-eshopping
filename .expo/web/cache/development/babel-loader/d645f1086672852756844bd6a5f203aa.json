{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"size\", \"source\", \"style\", \"onError\", \"onLayout\", \"onLoad\", \"onLoadEnd\", \"onLoadStart\", \"onProgress\", \"theme\", \"testID\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../../core/theming\";\nvar defaultSize = 64;\nvar AvatarImage = function AvatarImage(_ref) {\n  var _ref$size = _ref.size,\n    size = _ref$size === void 0 ? defaultSize : _ref$size,\n    source = _ref.source,\n    style = _ref.style,\n    onError = _ref.onError,\n    onLayout = _ref.onLayout,\n    onLoad = _ref.onLoad,\n    onLoadEnd = _ref.onLoadEnd,\n    onLoadStart = _ref.onLoadStart,\n    onProgress = _ref.onProgress,\n    themeOverrides = _ref.theme,\n    testID = _ref.testID,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useInternalTheme = useInternalTheme(themeOverrides),\n    colors = _useInternalTheme.colors;\n  var _ref2 = StyleSheet.flatten(style) || {},\n    _ref2$backgroundColor = _ref2.backgroundColor,\n    backgroundColor = _ref2$backgroundColor === void 0 ? colors === null || colors === void 0 ? void 0 : colors.primary : _ref2$backgroundColor;\n  return React.createElement(View, _extends({\n    style: [{\n      width: size,\n      height: size,\n      borderRadius: size / 2,\n      backgroundColor: backgroundColor\n    }, style]\n  }, rest), typeof source === 'function' && source({\n    size: size\n  }), typeof source !== 'function' && React.createElement(Image, {\n    testID: testID,\n    source: source,\n    style: {\n      width: size,\n      height: size,\n      borderRadius: size / 2\n    },\n    onError: onError,\n    onLayout: onLayout,\n    onLoad: onLoad,\n    onLoadEnd: onLoadEnd,\n    onLoadStart: onLoadStart,\n    onProgress: onProgress,\n    accessibilityIgnoresInvertColors: true\n  }));\n};\nAvatarImage.displayName = 'Avatar.Image';\nexport default AvatarImage;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA;AAAA;AAAA;AAW9B,SAASC,gBAAgB;AAGzB,IAAMC,WAAW,GAAG,EAAE;AAoEtB,IAAMC,WAAW,GAAG,SAAdA,WAAW,CAAGC,MAaP;EAAA,gBAALA,KAZNC,IAAI;IAAJA,IAAI,0BAAGH,WAAW;IAClBI,MAAM,GAWAF,KAXNE,MAAM;IACNC,KAAK,GAUCH,KAVNG,KAAK;IACLC,OAAO,GASDJ,KATNI,OAAO;IACPC,QAAQ,GAQFL,KARNK,QAAQ;IACRC,MAAM,GAOAN,KAPNM,MAAM;IACNC,SAAS,GAMHP,KANNO,SAAS;IACTC,WAAW,GAKLR,KALNQ,WAAW;IACXC,UAAU,GAIJT,KAJNS,UAAU;IACHC,cAAc,GAGfV,KAHNW,KAAK;IACLC,MAAM,GAEAZ,KAFNY,MAAM;IACHC,gCACGb;EACN,wBAAmBH,gBAAgB,CAACa,cAAc,CAAC;IAA3CI;EACR,YAA8CC,UAAU,CAACC,OAAO,CAACb,KAAK,CAAC,IAAI,CAAC,CAAC;IAAA,8BAArEc,eAAe;IAAfA,eAAe,sCAAGH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEI;EAElC,OACEtB,oBAACuB,IAAI;IACHhB,KAAK,EAAE,CACL;MACEiB,KAAK,EAAEnB,IAAI;MACXoB,MAAM,EAAEpB,IAAI;MACZqB,YAAY,EAAErB,IAAI,GAAG,CAAC;MACtBgB;IACF,CAAC,EACDd,KAAK;EACL,GACEU,IAAI,GAEP,OAAOX,MAAM,KAAK,UAAU,IAAIA,MAAM,CAAC;IAAED;EAAK,CAAC,CAAC,EAChD,OAAOC,MAAM,KAAK,UAAU,IAC3BN,oBAAC2B,KAAK;IACJX,MAAM,EAAEA,MAAO;IACfV,MAAM,EAAEA,MAAO;IACfC,KAAK,EAAE;MAAEiB,KAAK,EAAEnB,IAAI;MAAEoB,MAAM,EAAEpB,IAAI;MAAEqB,YAAY,EAAErB,IAAI,GAAG;IAAE,CAAE;IAC7DG,OAAO,EAAEA,OAAQ;IACjBC,QAAQ,EAAEA,QAAS;IACnBC,MAAM,EAAEA,MAAO;IACfC,SAAS,EAAEA,SAAU;IACrBC,WAAW,EAAEA,WAAY;IACzBC,UAAU,EAAEA,UAAW;IACvBe,gCAAgC;EAAA,EAEnC,CACI;AAEX,CAAC;AAEDzB,WAAW,CAAC0B,WAAW,GAAG,cAAc;AAExC,eAAe1B,WAAW","names":["React","useInternalTheme","defaultSize","AvatarImage","_ref","size","source","style","onError","onLayout","onLoad","onLoadEnd","onLoadStart","onProgress","themeOverrides","theme","testID","rest","colors","StyleSheet","flatten","backgroundColor","primary","View","width","height","borderRadius","Image","accessibilityIgnoresInvertColors","displayName"],"sourceRoot":"../../src","sources":["AvatarImage.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}