{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"dark\", \"style\", \"mode\", \"elevated\", \"safeAreaInsets\", \"theme\"],\n  _excluded2 = [\"backgroundColor\", \"elevation\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { useInternalTheme } from \"../../core/theming\";\nimport Surface from \"../Surface\";\nimport AppbarAction from \"./AppbarAction\";\nimport AppbarBackAction from \"./AppbarBackAction\";\nimport AppbarContent from \"./AppbarContent\";\nimport AppbarHeader from \"./AppbarHeader\";\nimport { DEFAULT_APPBAR_HEIGHT, getAppbarColor, modeAppbarHeight, renderAppbarContent } from \"./utils\";\nvar Appbar = function Appbar(_ref) {\n  var children = _ref.children,\n    dark = _ref.dark,\n    style = _ref.style,\n    _ref$mode = _ref.mode,\n    mode = _ref$mode === void 0 ? 'small' : _ref$mode,\n    elevated = _ref.elevated,\n    safeAreaInsets = _ref.safeAreaInsets,\n    themeOverrides = _ref.theme,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var isV3 = theme.isV3;\n  var flattenedStyle = StyleSheet.flatten(style);\n  var _ref2 = flattenedStyle || {},\n    customBackground = _ref2.backgroundColor,\n    _ref2$elevation = _ref2.elevation,\n    elevation = _ref2$elevation === void 0 ? isV3 ? elevated ? 2 : 0 : 4 : _ref2$elevation,\n    restStyle = _objectWithoutProperties(_ref2, _excluded2);\n  var isDark;\n  var backgroundColor = getAppbarColor(theme, elevation, customBackground, elevated);\n  var isMode = function isMode(modeToCompare) {\n    return isV3 && mode === modeToCompare;\n  };\n  if (typeof dark === 'boolean') {\n    isDark = dark;\n  } else {\n    isDark = backgroundColor === 'transparent' ? false : typeof backgroundColor === 'string' ? !color(backgroundColor).isLight() : true;\n  }\n  var isV3CenterAlignedMode = isV3 && isMode('center-aligned');\n  var shouldCenterContent = false;\n  var shouldAddLeftSpacing = false;\n  var shouldAddRightSpacing = false;\n  if (!isV3 && Platform.OS === 'ios' || isV3CenterAlignedMode) {\n    var hasAppbarContent = false;\n    var leftItemsCount = 0;\n    var rightItemsCount = 0;\n    React.Children.forEach(children, function (child) {\n      if (React.isValidElement(child)) {\n        if (child.type === AppbarContent) {\n          hasAppbarContent = true;\n        } else if (hasAppbarContent) {\n          rightItemsCount++;\n        } else {\n          leftItemsCount++;\n        }\n      }\n    });\n    shouldCenterContent = hasAppbarContent && leftItemsCount < 2 && rightItemsCount < (isV3 ? 3 : 2);\n    shouldAddLeftSpacing = shouldCenterContent && leftItemsCount === 0;\n    shouldAddRightSpacing = shouldCenterContent && rightItemsCount === 0;\n  }\n  var filterAppbarActions = React.useCallback(function () {\n    var isLeading = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    return React.Children.toArray(children).filter(function (child) {\n      return isLeading ? child.props.isLeading : !child.props.isLeading;\n    });\n  }, [children]);\n  var spacingStyle = isV3 ? styles.v3Spacing : styles.spacing;\n  var insets = {\n    paddingBottom: safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom,\n    paddingTop: safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.top,\n    paddingLeft: safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left,\n    paddingRight: safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right\n  };\n  return React.createElement(Surface, _extends({\n    style: [{\n      backgroundColor: backgroundColor\n    }, styles.appbar, {\n      height: isV3 ? modeAppbarHeight[mode] : DEFAULT_APPBAR_HEIGHT\n    }, insets, restStyle, !theme.isV3 && {\n      elevation: elevation\n    }],\n    elevation: elevation\n  }, rest), shouldAddLeftSpacing ? React.createElement(View, {\n    style: spacingStyle\n  }) : null, (!isV3 || isMode('small') || isMode('center-aligned')) && renderAppbarContent({\n    children: children,\n    isDark: isDark,\n    theme: theme,\n    isV3: isV3,\n    shouldCenterContent: isV3CenterAlignedMode || shouldCenterContent\n  }), (isMode('medium') || isMode('large')) && React.createElement(View, {\n    style: [styles.columnContainer, isMode('center-aligned') && styles.centerAlignedContainer]\n  }, React.createElement(View, {\n    style: styles.controlsRow\n  }, renderAppbarContent({\n    children: children,\n    isDark: isDark,\n    isV3: isV3,\n    renderOnly: [AppbarBackAction],\n    mode: mode\n  }), renderAppbarContent({\n    children: filterAppbarActions(true),\n    isDark: isDark,\n    isV3: isV3,\n    renderOnly: [AppbarAction],\n    mode: mode\n  }), React.createElement(View, {\n    style: styles.rightActionControls\n  }, renderAppbarContent({\n    children: filterAppbarActions(false),\n    isDark: isDark,\n    isV3: isV3,\n    renderExcept: [Appbar, AppbarBackAction, AppbarContent, AppbarHeader],\n    mode: mode\n  }))), renderAppbarContent({\n    children: children,\n    isDark: isDark,\n    isV3: isV3,\n    renderOnly: [AppbarContent],\n    mode: mode\n  })), shouldAddRightSpacing ? React.createElement(View, {\n    style: spacingStyle\n  }) : null);\n};\nvar styles = StyleSheet.create({\n  appbar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4\n  },\n  spacing: {\n    width: 48\n  },\n  v3Spacing: {\n    width: 52\n  },\n  controlsRow: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  rightActionControls: {\n    flexDirection: 'row',\n    flex: 1,\n    justifyContent: 'flex-end'\n  },\n  columnContainer: {\n    flexDirection: 'column',\n    flex: 1,\n    paddingTop: 8\n  },\n  centerAlignedContainer: {\n    paddingTop: 0\n  }\n});\nexport default Appbar;\nexport { Appbar };","map":{"version":3,"mappings":"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","names":["React","color","useInternalTheme","Surface","AppbarAction","AppbarBackAction","AppbarContent","AppbarHeader","DEFAULT_APPBAR_HEIGHT","getAppbarColor","modeAppbarHeight","renderAppbarContent","Appbar","_ref","children","dark","style","mode","elevated","safeAreaInsets","themeOverrides","theme","rest","isV3","flattenedStyle","StyleSheet","flatten","customBackground","backgroundColor","elevation","restStyle","isDark","isMode","modeToCompare","isLight","isV3CenterAlignedMode","shouldCenterContent","shouldAddLeftSpacing","shouldAddRightSpacing","Platform","OS","hasAppbarContent","leftItemsCount","rightItemsCount","Children","forEach","child","isValidElement","type","filterAppbarActions","useCallback","isLeading","toArray","filter","props","spacingStyle","styles","v3Spacing","spacing","insets","paddingBottom","bottom","paddingTop","top","paddingLeft","left","paddingRight","right","appbar","height","View","columnContainer","centerAlignedContainer","controlsRow","renderOnly","rightActionControls","renderExcept","create","flexDirection","alignItems","paddingHorizontal","width","flex","justifyContent"],"sourceRoot":"../../src","sources":["Appbar.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}