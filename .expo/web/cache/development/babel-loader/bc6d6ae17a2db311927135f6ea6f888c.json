{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport color from 'color';\nimport { useInternalTheme } from \"../../../core/theming\";\nimport { getConstants } from \"../helpers\";\nimport { AdornmentSide } from \"./enums\";\nvar AffixContext = React.createContext({\n  textStyle: {\n    fontFamily: '',\n    color: ''\n  },\n  topPosition: null,\n  side: AdornmentSide.Left\n});\nvar AffixAdornment = function AffixAdornment(_ref) {\n  var affix = _ref.affix,\n    side = _ref.side,\n    textStyle = _ref.textStyle,\n    topPosition = _ref.topPosition,\n    onLayout = _ref.onLayout,\n    visible = _ref.visible,\n    paddingHorizontal = _ref.paddingHorizontal,\n    maxFontSizeMultiplier = _ref.maxFontSizeMultiplier,\n    testID = _ref.testID;\n  return React.createElement(AffixContext.Provider, {\n    value: {\n      side: side,\n      textStyle: textStyle,\n      topPosition: topPosition,\n      onLayout: onLayout,\n      visible: visible,\n      paddingHorizontal: paddingHorizontal,\n      maxFontSizeMultiplier: maxFontSizeMultiplier,\n      testID: testID\n    }\n  }, affix);\n};\nvar TextInputAffix = function TextInputAffix(_ref2) {\n  var _theme$colors;\n  var text = _ref2.text,\n    labelStyle = _ref2.textStyle,\n    themeOverrides = _ref2.theme,\n    onTextLayout = _ref2.onLayout;\n  var theme = useInternalTheme(themeOverrides);\n  var _getConstants = getConstants(theme.isV3),\n    AFFIX_OFFSET = _getConstants.AFFIX_OFFSET;\n  var _React$useContext = React.useContext(AffixContext),\n    textStyle = _React$useContext.textStyle,\n    onLayout = _React$useContext.onLayout,\n    topPosition = _React$useContext.topPosition,\n    side = _React$useContext.side,\n    visible = _React$useContext.visible,\n    paddingHorizontal = _React$useContext.paddingHorizontal,\n    maxFontSizeMultiplier = _React$useContext.maxFontSizeMultiplier,\n    testID = _React$useContext.testID;\n  var textColor = color(theme.isV3 ? theme.colors.onSurface : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.text).alpha(theme.dark ? 0.7 : 0.54).rgb().string();\n  var offset = typeof paddingHorizontal === 'number' ? paddingHorizontal : AFFIX_OFFSET;\n  var style = _defineProperty({\n    top: topPosition\n  }, side, offset);\n  return React.createElement(Animated.View, {\n    style: [styles.container, style, {\n      opacity: (visible === null || visible === void 0 ? void 0 : visible.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0]\n      })) || 1\n    }],\n    onLayout: onLayout,\n    testID: testID\n  }, React.createElement(Text, {\n    maxFontSizeMultiplier: maxFontSizeMultiplier,\n    style: [{\n      color: textColor\n    }, textStyle, labelStyle],\n    onLayout: onTextLayout,\n    testID: testID + \"-text\"\n  }, text));\n};\nTextInputAffix.displayName = 'TextInput.Affix';\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default TextInputAffix;\nexport { TextInputAffix, AffixAdornment };","map":{"version":3,"mappings":"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","names":["React","color","useInternalTheme","getConstants","AdornmentSide","AffixContext","createContext","textStyle","fontFamily","topPosition","side","Left","AffixAdornment","_ref","affix","onLayout","visible","paddingHorizontal","maxFontSizeMultiplier","testID","Provider","value","TextInputAffix","_ref2","text","labelStyle","themeOverrides","theme","onTextLayout","isV3","AFFIX_OFFSET","useContext","textColor","colors","onSurface","_theme$colors","alpha","dark","rgb","string","offset","style","top","Animated","View","styles","container","opacity","interpolate","inputRange","outputRange","Text","displayName","StyleSheet","create","position","justifyContent","alignItems"],"sourceRoot":"../../src","sources":["TextInputAffix.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}