{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"focusedIcon\", \"unfocusedIcon\", \"label\", \"active\", \"theme\", \"style\", \"onPress\", \"accessibilityLabel\", \"badge\", \"testID\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport Badge from \"../Badge\";\nimport Icon from \"../Icon\";\nimport Text from \"../Typography/Text\";\nvar badgeSize = 8;\nvar iconSize = 24;\nvar itemSize = 56;\nvar outlineHeight = 32;\nvar DrawerCollapsedItem = function DrawerCollapsedItem(_ref) {\n  var focusedIcon = _ref.focusedIcon,\n    unfocusedIcon = _ref.unfocusedIcon,\n    label = _ref.label,\n    active = _ref.active,\n    themeOverrides = _ref.theme,\n    style = _ref.style,\n    onPress = _ref.onPress,\n    accessibilityLabel = _ref.accessibilityLabel,\n    _ref$badge = _ref.badge,\n    badge = _ref$badge === void 0 ? false : _ref$badge,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'drawer-collapsed-item' : _ref$testID,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var isV3 = theme.isV3;\n  var scale = theme.animation.scale;\n  var _React$useState = React.useState(1),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    numOfLines = _React$useState2[0],\n    setNumOfLines = _React$useState2[1];\n  var _React$useRef = React.useRef(new Animated.Value(active ? 1 : 0.5)),\n    animScale = _React$useRef.current;\n  React.useEffect(function () {\n    if (!active) {\n      animScale.setValue(0.5);\n    }\n  }, [animScale, active]);\n  if (!isV3) {\n    return null;\n  }\n  var handlePressOut = function handlePressOut() {\n    Animated.timing(animScale, {\n      toValue: 1,\n      duration: 150 * scale,\n      useNativeDriver: true\n    }).start();\n  };\n  var iconPadding = ((!label ? itemSize : outlineHeight) - iconSize) / 2;\n  var backgroundColor = active ? theme.colors.secondaryContainer : 'transparent';\n  var labelColor = active ? theme.colors.onSurface : theme.colors.onSurfaceVariant;\n  var iconColor = active ? theme.colors.onSecondaryContainer : theme.colors.onSurfaceVariant;\n  var onTextLayout = function onTextLayout(_ref2) {\n    var nativeEvent = _ref2.nativeEvent;\n    setNumOfLines(nativeEvent.lines.length);\n  };\n  var androidLetterSpacingStyle = Platform.OS === 'android' && numOfLines > 4 && styles.letterSpacing;\n  var labelTextStyle = _objectSpread({\n    color: labelColor\n  }, isV3 ? theme.fonts.labelMedium : {});\n  var icon = !active && unfocusedIcon !== undefined ? unfocusedIcon : focusedIcon;\n  return React.createElement(View, rest, React.createElement(TouchableWithoutFeedback, {\n    onPress: onPress,\n    onPressOut: onPress ? handlePressOut : undefined,\n    accessibilityTraits: active ? ['button', 'selected'] : 'button',\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      selected: active\n    },\n    accessibilityLabel: accessibilityLabel,\n    testID: testID\n  }, React.createElement(View, {\n    style: styles.wrapper\n  }, React.createElement(Animated.View, {\n    style: [styles.outline, !label && styles.roundedOutline, {\n      transform: [label ? {\n        scaleX: animScale\n      } : {\n        scale: animScale\n      }],\n      backgroundColor: backgroundColor\n    }, style],\n    testID: testID + \"-outline\"\n  }), React.createElement(View, {\n    style: [styles.icon, {\n      top: iconPadding\n    }],\n    testID: testID + \"-container\"\n  }, badge && React.createElement(View, {\n    style: styles.badgeContainer\n  }, typeof badge === 'boolean' ? React.createElement(Badge, {\n    visible: badge,\n    size: badgeSize\n  }) : React.createElement(Badge, {\n    visible: badge != null,\n    size: 2 * badgeSize\n  }, badge)), React.createElement(Icon, {\n    source: icon,\n    size: iconSize,\n    color: iconColor\n  })), label ? React.createElement(Text, {\n    variant: \"labelMedium\",\n    selectable: false,\n    numberOfLines: 2,\n    onTextLayout: onTextLayout,\n    style: [styles.label, androidLetterSpacingStyle, labelTextStyle]\n  }, label) : null)));\n};\nDrawerCollapsedItem.displayName = 'Drawer.CollapsedItem';\nvar styles = StyleSheet.create({\n  wrapper: {\n    width: 80,\n    marginBottom: 12,\n    minHeight: itemSize,\n    alignItems: 'center'\n  },\n  outline: {\n    width: itemSize,\n    height: outlineHeight,\n    borderRadius: itemSize / 2,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  roundedOutline: {\n    height: itemSize\n  },\n  icon: {\n    position: 'absolute'\n  },\n  letterSpacing: {\n    letterSpacing: 0.3,\n    alignSelf: 'stretch'\n  },\n  label: {\n    marginHorizontal: 12,\n    marginTop: 4,\n    textAlign: 'center'\n  },\n  badgeContainer: {\n    position: 'absolute',\n    left: 20,\n    bottom: 20,\n    zIndex: 2\n  }\n});\nexport default DrawerCollapsedItem;","map":{"version":3,"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAc9B,SAASC,gBAAgB;AAEzB,OAAOC,KAAK;AACZ,OAAOC,IAAI;AACX,OAAOC,IAAI;AA2CX,IAAMC,SAAS,GAAG,CAAC;AACnB,IAAMC,QAAQ,GAAG,EAAE;AACnB,IAAMC,QAAQ,GAAG,EAAE;AACnB,IAAMC,aAAa,GAAG,EAAE;AA4BxB,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAGC,MAYf;EAAA,IAXXC,WAAW,GAWLD,KAXNC,WAAW;IACXC,aAAa,GAUPF,KAVNE,aAAa;IACbC,KAAK,GASCH,KATNG,KAAK;IACLC,MAAM,GAQAJ,KARNI,MAAM;IACCC,cAAc,GAOfL,KAPNM,KAAK;IACLC,KAAK,GAMCP,KANNO,KAAK;IACLC,OAAO,GAKDR,KALNQ,OAAO;IACPC,kBAAkB,GAIZT,KAJNS,kBAAkB;IAAA,aAIZT,KAHNU,KAAK;IAALA,KAAK,2BAAG,KAAK;IAAA,cAGPV,KAFNW,MAAM;IAANA,MAAM,4BAAG,uBAAuB;IAC7BC,gCACGZ;EACN,IAAMM,KAAK,GAAGf,gBAAgB,CAACc,cAAc,CAAC;EAC9C,IAAQQ,OAASP,KAAK,CAAdO;EACR,IAAQC,QAAUR,KAAK,CAACS,SAAS,CAAzBD;EAER,sBAAoCxB,KAAK,CAAC0B,QAAQ,CAAC,CAAC,CAAC;IAAA;IAA9CC,UAAU;IAAEC,aAAa;EAEhC,oBAA+B5B,KAAK,CAAC6B,MAAM,CACzC,IAAIC,QAAQ,CAACC,KAAK,CAACjB,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC,CACrC;IAFgBkB,0BAATC,OAAO;EAIfjC,KAAK,CAACkC,SAAS,CAAC,YAAM;IACpB,IAAI,CAACpB,MAAM,EAAE;MACXkB,SAAS,CAACG,QAAQ,CAAC,GAAG,CAAC;IACzB;EACF,CAAC,EAAE,CAACH,SAAS,EAAElB,MAAM,CAAC,CAAC;EAEvB,IAAI,CAACS,IAAI,EAAE;IACT,OAAO,IAAI;EACb;EAEA,IAAMa,cAAc,GAAG,SAAjBA,cAAc,GAAS;IAC3BN,QAAQ,CAACO,MAAM,CAACL,SAAS,EAAE;MACzBM,OAAO,EAAE,CAAC;MACVC,QAAQ,EAAE,GAAG,GAAGf,KAAK;MACrBgB,eAAe,EAAE;IACnB,CAAC,CAAC,CAACC,KAAK,EAAE;EACZ,CAAC;EAED,IAAMC,WAAW,GAAG,CAAC,CAAC,CAAC7B,KAAK,GAAGN,QAAQ,GAAGC,aAAa,IAAIF,QAAQ,IAAI,CAAC;EAExE,IAAMqC,eAAe,GAAG7B,MAAM,GAC1BE,KAAK,CAAC4B,MAAM,CAACC,kBAAkB,GAC/B,aAAa;EACjB,IAAMC,UAAU,GAAGhC,MAAM,GACrBE,KAAK,CAAC4B,MAAM,CAACG,SAAS,GACtB/B,KAAK,CAAC4B,MAAM,CAACI,gBAAgB;EACjC,IAAMC,SAAS,GAAGnC,MAAM,GACpBE,KAAK,CAAC4B,MAAM,CAACM,oBAAoB,GACjClC,KAAK,CAAC4B,MAAM,CAACI,gBAAgB;EAEjC,IAAMG,YAAY,GAAG,SAAfA,YAAY,CAAGC,OAE4B;IAAA,IAD/CC,cAC0CD,MAD1CC;IAEAzB,aAAa,CAACyB,WAAW,CAACC,KAAK,CAACC,MAAM,CAAC;EACzC,CAAC;EAID,IAAMC,yBAAyB,GAC7BC,QAAQ,CAACC,EAAE,KAAK,SAAS,IAAI/B,UAAU,GAAG,CAAC,IAAIgC,MAAM,CAACC,aAAa;EAErE,IAAMC,cAAc;IAClBC,KAAK,EAAEhB;EAAU,GACbvB,IAAI,GAAGP,KAAK,CAAC+C,KAAK,CAACC,WAAW,GAAG,CAAC,CAAC,CACxC;EAED,IAAMC,IAAI,GACR,CAACnD,MAAM,IAAIF,aAAa,KAAKsD,SAAS,GAAGtD,aAAa,GAAGD,WAAW;EAEtE,OACEX,oBAACmE,IAAI,EAAK7C,IAAI,EAEZtB,oBAACoE,wBAAwB;IACvBlD,OAAO,EAAEA,OAAQ;IACjBmD,UAAU,EAAEnD,OAAO,GAAGkB,cAAc,GAAG8B;IAEvCI,mBAAmB,EAAExD,MAAM,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,GAAG,QAAS;IAChEyD,0BAA0B,EAAC,QAAQ;IACnCC,iBAAiB,EAAC,QAAQ;IAC1BC,kBAAkB,EAAE;MAAEC,QAAQ,EAAE5D;IAAO,CAAE;IACzCK,kBAAkB,EAAEA,kBAAmB;IACvCE,MAAM,EAAEA;EAAO,GAEfrB,oBAACmE,IAAI;IAAClD,KAAK,EAAE0C,MAAM,CAACgB;EAAQ,GAC1B3E,oBAAC8B,QAAQ,CAACqC,IAAI;IACZlD,KAAK,EAAE,CACL0C,MAAM,CAACiB,OAAO,EACd,CAAC/D,KAAK,IAAI8C,MAAM,CAACkB,cAAc,EAC/B;MACEC,SAAS,EAAE,CACTjE,KAAK,GACD;QACEkE,MAAM,EAAE/C;MACV,CAAC,GACD;QAAER,KAAK,EAAEQ;MAAU,CAAC,CACzB;MACDW;IACF,CAAC,EACD1B,KAAK,CACL;IACFI,MAAM,EAAKA,MAAO;EAAU,EAC5B,EAEFrB,oBAACmE,IAAI;IACHlD,KAAK,EAAE,CAAC0C,MAAM,CAACM,IAAI,EAAE;MAAEe,GAAG,EAAEtC;IAAY,CAAC,CAAE;IAC3CrB,MAAM,EAAKA,MAAO;EAAY,GAE7BD,KAAK,IACJpB,oBAACmE,IAAI;IAAClD,KAAK,EAAE0C,MAAM,CAACsB;EAAe,GAChC,OAAO7D,KAAK,KAAK,SAAS,GACzBpB,oBAACE,KAAK;IAACgF,OAAO,EAAE9D,KAAM;IAAC+D,IAAI,EAAE9E;EAAU,EAAG,GAE1CL,oBAACE,KAAK;IAACgF,OAAO,EAAE9D,KAAK,IAAI,IAAK;IAAC+D,IAAI,EAAE,CAAC,GAAG9E;EAAU,GAChDe,KAAK,CAET,CAEJ,EACDpB,oBAACG,IAAI;IAACiF,MAAM,EAAEnB,IAAK;IAACkB,IAAI,EAAE7E,QAAS;IAACwD,KAAK,EAAEb;EAAU,EAAG,CACnD,EAENpC,KAAK,GACJb,oBAACI,IAAI;IACHiF,OAAO,EAAC,aAAa;IACrBC,UAAU,EAAE,KAAM;IAClBC,aAAa,EAAE,CAAE;IACjBpC,YAAY,EAAEA,YAAa;IAC3BlC,KAAK,EAAE,CAAC0C,MAAM,CAAC9C,KAAK,EAAE2C,yBAAyB,EAAEK,cAAc;EAAE,GAEhEhD,KAAK,CACD,GACL,IAAI,CACH,CACkB,CACtB;AAEX,CAAC;AAEDJ,mBAAmB,CAAC+E,WAAW,GAAG,sBAAsB;AAExD,IAAM7B,MAAM,GAAG8B,UAAU,CAACC,MAAM,CAAC;EAC/Bf,OAAO,EAAE;IACPgB,KAAK,EAAE,EAAE;IACTC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAEtF,QAAQ;IACnBuF,UAAU,EAAE;EACd,CAAC;EACDlB,OAAO,EAAE;IACPe,KAAK,EAAEpF,QAAQ;IACfwF,MAAM,EAAEvF,aAAa;IACrBwF,YAAY,EAAEzF,QAAQ,GAAG,CAAC;IAC1BuF,UAAU,EAAE,QAAQ;IACpBG,cAAc,EAAE;EAClB,CAAC;EACDpB,cAAc,EAAE;IACdkB,MAAM,EAAExF;EACV,CAAC;EACD0D,IAAI,EAAE;IACJiC,QAAQ,EAAE;EACZ,CAAC;EACDtC,aAAa,EAAE;IACbA,aAAa,EAAE,GAAG;IAClBuC,SAAS,EAAE;EACb,CAAC;EACDtF,KAAK,EAAE;IACLuF,gBAAgB,EAAE,EAAE;IACpBC,SAAS,EAAE,CAAC;IACZC,SAAS,EAAE;EACb,CAAC;EACDrB,cAAc,EAAE;IACdiB,QAAQ,EAAE,UAAU;IACpBK,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE;EACV;AACF,CAAC,CAAC;AAEF,eAAehG,mBAAmB","names":["React","useInternalTheme","Badge","Icon","Text","badgeSize","iconSize","itemSize","outlineHeight","DrawerCollapsedItem","_ref","focusedIcon","unfocusedIcon","label","active","themeOverrides","theme","style","onPress","accessibilityLabel","badge","testID","rest","isV3","scale","animation","useState","numOfLines","setNumOfLines","useRef","Animated","Value","animScale","current","useEffect","setValue","handlePressOut","timing","toValue","duration","useNativeDriver","start","iconPadding","backgroundColor","colors","secondaryContainer","labelColor","onSurface","onSurfaceVariant","iconColor","onSecondaryContainer","onTextLayout","_ref2","nativeEvent","lines","length","androidLetterSpacingStyle","Platform","OS","styles","letterSpacing","labelTextStyle","color","fonts","labelMedium","icon","undefined","View","TouchableWithoutFeedback","onPressOut","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","selected","wrapper","outline","roundedOutline","transform","scaleX","top","badgeContainer","visible","size","source","variant","selectable","numberOfLines","displayName","StyleSheet","create","width","marginBottom","minHeight","alignItems","height","borderRadius","justifyContent","position","alignSelf","marginHorizontal","marginTop","textAlign","left","bottom","zIndex"],"sourceRoot":"../../src","sources":["DrawerCollapsedItem.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}