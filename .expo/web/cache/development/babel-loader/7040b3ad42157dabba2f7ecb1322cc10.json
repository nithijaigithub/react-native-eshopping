{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function AboutScreen() {\n  var navigation = useNavigation();\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.homeContainer,\n      children: [_jsx(Text, {\n        style: styles.homeHeading,\n        children: \"About Us\"\n      }), _jsx(Text, {\n        style: styles.homeContent,\n        children: \"The working principles of React Native are virtually identical to React except that React Native does not manipulate the DOM via the Virtual DOM. It runs in a background process (which interprets the JavaScript written by the developers) directly on the end-device and communicates with the native platform via serialized data over an asynchronous and batched bridge.\"\n      }), _jsx(Text, {\n        style: styles.homeContent,\n        children: \"React components wrap existing native code and interact with native APIs via React's declarative UI paradigm and JavaScript.\"\n      }), _jsx(Text, {\n        style: styles.homeHeading,\n        children: \"Sample Application\"\n      }), _jsx(Text, {\n        style: styles.homeContent,\n        children: \"Click the below sample \\\"eShopping\\\" React Native application and its built with Expo.\"\n      }), _jsx(Button, {\n        title: \"eShopping\",\n        color: \"#7fad39\",\n        onPress: function onPress() {\n          navigation.navigate('Home_Screen');\n        }\n      }), _jsx(Text, {\n        style: styles.homeContent,\n        children: \"This application provides number of sections and screens. They are as follows,\"\n      }), _jsx(Text, {\n        style: styles.homeContent,\n        children: \"Screens: Home Screen (with all available categories), About US screen, static help & support screen, category wise products list screen, Product details screen, and shopping cart screen with items total.\"\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  homeContainer: {\n    backgroundColor: '#ffffff',\n    margin: 12,\n    padding: 16,\n    fontFamily: 'arial',\n    color: '#666',\n    borderRadius: 16,\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    shadowColor: 'black',\n    shadowOffset: {\n      height: 0,\n      width: 0\n    },\n    elevation: 1\n  },\n  homeHeading: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#666'\n  },\n  homeContent: {\n    fontSize: 14,\n    paddingTop: 6,\n    paddingBottom: 6,\n    lineHeight: 20\n  }\n});","map":{"version":3,"names":["React","useNavigation","AboutScreen","navigation","styles","homeContainer","homeHeading","homeContent","navigate","StyleSheet","create","backgroundColor","margin","padding","fontFamily","color","borderRadius","shadowOpacity","shadowRadius","shadowColor","shadowOffset","height","width","elevation","fontSize","fontWeight","paddingTop","paddingBottom","lineHeight"],"sources":["C:/Users/jnithyan/Development/react-native/eshp-bk/new/screens/AboutScreen.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n    StyleSheet,\r\n    View,\r\n    Text,\r\n    Button\r\n} from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nexport default function AboutScreen() {\r\n    const navigation = useNavigation();\r\n    return (\r\n        <>\r\n            <View style={styles.homeContainer}>\r\n                <Text style={styles.homeHeading}>About Us</Text>\r\n                <Text style={styles.homeContent}>The working principles of React Native are virtually identical to React except that React Native does not manipulate the DOM via the Virtual DOM. It runs in a background process (which interprets the JavaScript written by the developers) directly on the end-device and communicates with the native platform via serialized data over an asynchronous and batched bridge.</Text>\r\n                <Text style={styles.homeContent}>React components wrap existing native code and interact with native APIs via React's declarative UI paradigm and JavaScript.</Text>\r\n                <Text style={styles.homeHeading}>Sample Application</Text>\r\n                <Text style={styles.homeContent}>Click the below sample \"eShopping\" React Native application and its built with Expo.</Text>\r\n                <Button\r\n                    title=\"eShopping\"\r\n                    color=\"#7fad39\"\r\n                    onPress={() => {navigation.navigate('Home_Screen')}}\r\n                />\r\n                <Text style={styles.homeContent}>This application provides number of sections and screens. They are as follows,</Text>\r\n                <Text style={styles.homeContent}>Screens: Home Screen (with all available categories), About US screen, static help & support screen, category wise products list screen, Product details screen, and shopping cart screen with items total.</Text>\r\n            </View>\r\n        </>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    homeContainer: {\r\n      backgroundColor: '#ffffff',\r\n      margin: 12,\r\n      padding: 16,\r\n      fontFamily: 'arial',\r\n      color: '#666',\r\n      borderRadius: 16,\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 4,\r\n    shadowColor: 'black',\r\n    shadowOffset: {\r\n      height: 0,\r\n      width: 0,\r\n    },\r\n    elevation: 1,\r\n    },\r\n    homeHeading: {\r\n      fontSize: 16,\r\n      fontWeight: 'bold',\r\n      color: '#666'\r\n    },\r\n    \r\n    homeContent: {\r\n      fontSize: 14,\r\n      paddingTop:6,\r\n      paddingBottom: 6,\r\n      lineHeight: 20\r\n    },\r\n    \r\n});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAAA;AAO1B,SAASC,aAAa,QAAQ,0BAA0B;AAAC;AAAA;AAAA;AAEzD,eAAe,SAASC,WAAW,GAAG;EAClC,IAAMC,UAAU,GAAGF,aAAa,EAAE;EAClC,OACI;IAAA,UACI,MAAC,IAAI;MAAC,KAAK,EAAEG,MAAM,CAACC,aAAc;MAAA,WAC9B,KAAC,IAAI;QAAC,KAAK,EAAED,MAAM,CAACE,WAAY;QAAA,UAAC;MAAQ,EAAO,EAChD,KAAC,IAAI;QAAC,KAAK,EAAEF,MAAM,CAACG,WAAY;QAAA,UAAC;MAA+W,EAAO,EACvZ,KAAC,IAAI;QAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;QAAA,UAAC;MAA4H,EAAO,EACpK,KAAC,IAAI;QAAC,KAAK,EAAEH,MAAM,CAACE,WAAY;QAAA,UAAC;MAAkB,EAAO,EAC1D,KAAC,IAAI;QAAC,KAAK,EAAEF,MAAM,CAACG,WAAY;QAAA,UAAC;MAAoF,EAAO,EAC5H,KAAC,MAAM;QACH,KAAK,EAAC,WAAW;QACjB,KAAK,EAAC,SAAS;QACf,OAAO,EAAE,mBAAM;UAACJ,UAAU,CAACK,QAAQ,CAAC,aAAa,CAAC;QAAA;MAAE,EACtD,EACF,KAAC,IAAI;QAAC,KAAK,EAAEJ,MAAM,CAACG,WAAY;QAAA,UAAC;MAA8E,EAAO,EACtH,KAAC,IAAI;QAAC,KAAK,EAAEH,MAAM,CAACG,WAAY;QAAA,UAAC;MAA2M,EAAO;IAAA;EAChP,EACR;AAEX;AAEA,IAAMH,MAAM,GAAGK,UAAU,CAACC,MAAM,CAAC;EAC7BL,aAAa,EAAE;IACbM,eAAe,EAAE,SAAS;IAC1BC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,OAAO;IACnBC,KAAK,EAAE,MAAM;IACbC,YAAY,EAAE,EAAE;IAClBC,aAAa,EAAE,GAAG;IAClBC,YAAY,EAAE,CAAC;IACfC,WAAW,EAAE,OAAO;IACpBC,YAAY,EAAE;MACZC,MAAM,EAAE,CAAC;MACTC,KAAK,EAAE;IACT,CAAC;IACDC,SAAS,EAAE;EACX,CAAC;EACDjB,WAAW,EAAE;IACXkB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBV,KAAK,EAAE;EACT,CAAC;EAEDR,WAAW,EAAE;IACXiB,QAAQ,EAAE,EAAE;IACZE,UAAU,EAAC,CAAC;IACZC,aAAa,EAAE,CAAC;IAChBC,UAAU,EAAE;EACd;AAEJ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}