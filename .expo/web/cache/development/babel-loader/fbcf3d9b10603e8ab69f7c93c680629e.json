{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"color\", \"subtitle\", \"subtitleStyle\", \"onPress\", \"style\", \"titleRef\", \"titleStyle\", \"title\", \"mode\", \"theme\", \"testID\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { useInternalTheme } from \"../../core/theming\";\nimport { white } from \"../../styles/themes/v2/colors\";\nimport Text from \"../Typography/Text\";\nimport { modeTextVariant } from \"./utils\";\nvar AppbarContent = function AppbarContent(_ref) {\n  var titleColor = _ref.color,\n    subtitle = _ref.subtitle,\n    subtitleStyle = _ref.subtitleStyle,\n    onPress = _ref.onPress,\n    style = _ref.style,\n    titleRef = _ref.titleRef,\n    titleStyle = _ref.titleStyle,\n    title = _ref.title,\n    _ref$mode = _ref.mode,\n    mode = _ref$mode === void 0 ? 'small' : _ref$mode,\n    themeOverrides = _ref.theme,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'appbar-content' : _ref$testID,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var isV3 = theme.isV3,\n    colors = theme.colors;\n  var titleTextColor = titleColor ? titleColor : isV3 ? colors.onSurface : white;\n  var subtitleColor = color(titleTextColor).alpha(0.7).rgb().string();\n  var modeContainerStyles = {\n    small: styles.v3DefaultContainer,\n    medium: styles.v3MediumContainer,\n    large: styles.v3LargeContainer,\n    'center-aligned': styles.v3DefaultContainer\n  };\n  var variant = modeTextVariant[mode];\n  return React.createElement(TouchableWithoutFeedback, {\n    accessibilityRole: \"button\",\n    onPress: onPress,\n    disabled: !onPress\n  }, React.createElement(View, _extends({\n    pointerEvents: \"box-none\",\n    style: [styles.container, isV3 && modeContainerStyles[mode], style],\n    testID: testID\n  }, rest), typeof title === 'string' ? React.createElement(Text, _extends({}, isV3 && {\n    variant: variant\n  }, {\n    ref: titleRef,\n    style: [_objectSpread({\n      color: titleTextColor\n    }, isV3 ? theme.fonts[variant] : Platform.OS === 'ios' ? theme.fonts.regular : theme.fonts.medium), !isV3 && styles.title, titleStyle],\n    numberOfLines: 1,\n    accessible: true,\n    accessibilityRole: Platform.OS === 'web' ? 'heading' : 'header',\n    testID: testID + \"-title-text\"\n  }), title) : title, !isV3 && subtitle ? React.createElement(Text, {\n    style: [styles.subtitle, {\n      color: subtitleColor\n    }, subtitleStyle],\n    numberOfLines: 1\n  }, subtitle) : null));\n};\nAppbarContent.displayName = 'Appbar.Content';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12\n  },\n  v3DefaultContainer: {\n    paddingHorizontal: 0\n  },\n  v3MediumContainer: {\n    paddingHorizontal: 0,\n    justifyContent: 'flex-end',\n    paddingBottom: 24\n  },\n  v3LargeContainer: {\n    paddingHorizontal: 0,\n    paddingTop: 36,\n    justifyContent: 'flex-end',\n    paddingBottom: 28\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14\n  }\n});\nexport default AppbarContent;\nexport { AppbarContent };","map":{"version":3,"mappings":"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","names":["React","color","useInternalTheme","white","Text","modeTextVariant","AppbarContent","_ref","titleColor","subtitle","subtitleStyle","onPress","style","titleRef","titleStyle","title","mode","themeOverrides","theme","testID","rest","isV3","colors","titleTextColor","onSurface","subtitleColor","alpha","rgb","string","modeContainerStyles","small","styles","v3DefaultContainer","medium","v3MediumContainer","large","v3LargeContainer","variant","TouchableWithoutFeedback","accessibilityRole","disabled","View","pointerEvents","container","ref","fonts","Platform","OS","regular","numberOfLines","accessible","displayName","StyleSheet","create","flex","paddingHorizontal","justifyContent","paddingBottom","paddingTop","fontSize"],"sourceRoot":"../../src","sources":["AppbarContent.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}