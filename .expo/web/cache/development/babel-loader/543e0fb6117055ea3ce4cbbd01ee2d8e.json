{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"type\", \"visible\", \"theme\", \"onLayout\", \"padding\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport color from 'color';\nimport { useInternalTheme } from \"../core/theming\";\nimport AnimatedText from \"./Typography/AnimatedText\";\nvar HelperText = function HelperText(_ref) {\n  var _theme$colors;\n  var style = _ref.style,\n    _ref$type = _ref.type,\n    type = _ref$type === void 0 ? 'info' : _ref$type,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? true : _ref$visible,\n    themeOverrides = _ref.theme,\n    onLayout = _ref.onLayout,\n    _ref$padding = _ref.padding,\n    padding = _ref$padding === void 0 ? 'normal' : _ref$padding,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var _React$useRef = React.useRef(new Animated.Value(visible ? 1 : 0)),\n    shown = _React$useRef.current;\n  var _React$useRef2 = React.useRef(0),\n    textHeight = _React$useRef2.current;\n  var scale = theme.animation.scale;\n  var _rest$maxFontSizeMult = rest.maxFontSizeMultiplier,\n    maxFontSizeMultiplier = _rest$maxFontSizeMult === void 0 ? 1.5 : _rest$maxFontSizeMult;\n  React.useEffect(function () {\n    if (visible) {\n      Animated.timing(shown, {\n        toValue: 1,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      Animated.timing(shown, {\n        toValue: 0,\n        duration: 180 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [visible, scale, shown]);\n  var handleTextLayout = function handleTextLayout(e) {\n    onLayout === null || onLayout === void 0 ? void 0 : onLayout(e);\n    textHeight = e.nativeEvent.layout.height;\n  };\n  var colors = theme.colors,\n    dark = theme.dark;\n  var textColor = type === 'error' ? colors === null || colors === void 0 ? void 0 : colors.error : color(theme.isV3 ? theme.colors.onSurface : theme === null || theme === void 0 ? void 0 : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.text).alpha(dark ? 0.7 : 0.54).rgb().string();\n  return React.createElement(AnimatedText, _extends({\n    onLayout: handleTextLayout,\n    style: [styles.text, padding !== 'none' ? styles.padding : {}, {\n      color: textColor,\n      opacity: shown,\n      transform: visible && type === 'error' ? [{\n        translateY: shown.interpolate({\n          inputRange: [0, 1],\n          outputRange: [-textHeight / 2, 0]\n        })\n      }] : []\n    }, style],\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }, rest), rest.children);\n};\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: 12,\n    paddingVertical: 4\n  },\n  padding: {\n    paddingHorizontal: 12\n  }\n});\nexport default HelperText;","map":{"version":3,"mappings":"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","names":["React","color","useInternalTheme","AnimatedText","HelperText","_ref","style","type","visible","themeOverrides","theme","onLayout","padding","rest","useRef","Animated","Value","shown","current","textHeight","scale","animation","maxFontSizeMultiplier","useEffect","timing","toValue","duration","useNativeDriver","start","handleTextLayout","e","nativeEvent","layout","height","colors","dark","textColor","error","isV3","onSurface","_theme$colors","text","alpha","rgb","string","styles","opacity","transform","translateY","interpolate","inputRange","outputRange","children","StyleSheet","create","fontSize","paddingVertical","paddingHorizontal"],"sourceRoot":"../../src","sources":["HelperText.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}