{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"elevation\", \"onLongPress\", \"delayLongPress\", \"onPress\", \"mode\", \"children\", \"style\", \"contentStyle\", \"theme\", \"testID\", \"accessible\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../../core/theming\";\nimport Surface from \"../Surface\";\nimport CardActions from \"./CardActions\";\nimport CardContent from \"./CardContent\";\nimport CardCover from \"./CardCover\";\nimport CardTitle from \"./CardTitle\";\nimport { getCardColors } from \"./utils\";\nvar Card = function Card(_ref) {\n  var _ref$elevation = _ref.elevation,\n    cardElevation = _ref$elevation === void 0 ? 1 : _ref$elevation,\n    onLongPress = _ref.onLongPress,\n    delayLongPress = _ref.delayLongPress,\n    onPress = _ref.onPress,\n    _ref$mode = _ref.mode,\n    cardMode = _ref$mode === void 0 ? 'elevated' : _ref$mode,\n    children = _ref.children,\n    style = _ref.style,\n    contentStyle = _ref.contentStyle,\n    themeOverrides = _ref.theme,\n    _ref$testID = _ref.testID,\n    testID = _ref$testID === void 0 ? 'card' : _ref$testID,\n    accessible = _ref.accessible,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useInternalTheme(themeOverrides);\n  var isMode = React.useCallback(function (modeToCompare) {\n    return cardMode === modeToCompare;\n  }, [cardMode]);\n  var _React$useRef = React.useRef(new Animated.Value(cardElevation)),\n    elevation = _React$useRef.current;\n  var _React$useRef2 = React.useRef(new Animated.Value(cardElevation)),\n    elevationDarkAdaptive = _React$useRef2.current;\n  var animation = theme.animation,\n    dark = theme.dark,\n    mode = theme.mode,\n    roundness = theme.roundness,\n    isV3 = theme.isV3;\n  var prevDarkRef = React.useRef(dark);\n  React.useEffect(function () {\n    prevDarkRef.current = dark;\n  });\n  var prevDark = prevDarkRef.current;\n  var isAdaptiveMode = mode === 'adaptive';\n  var animationDuration = 150 * animation.scale;\n  React.useEffect(function () {\n    if (dark && isAdaptiveMode && !prevDark) {\n      elevation.setValue(cardElevation);\n      elevationDarkAdaptive.setValue(cardElevation);\n    }\n  }, [prevDark, dark, isAdaptiveMode, cardElevation, elevation, elevationDarkAdaptive]);\n  var runElevationAnimation = function runElevationAnimation(pressType) {\n    var isPressTypeIn = pressType === 'in';\n    if (dark && isAdaptiveMode) {\n      Animated.timing(elevationDarkAdaptive, {\n        toValue: isPressTypeIn ? isV3 ? 2 : 8 : cardElevation,\n        duration: animationDuration,\n        useNativeDriver: false\n      }).start();\n    } else {\n      Animated.timing(elevation, {\n        toValue: isPressTypeIn ? isV3 ? 2 : 8 : cardElevation,\n        duration: animationDuration,\n        useNativeDriver: false\n      }).start();\n    }\n  };\n  var handlePressIn = function handlePressIn() {\n    runElevationAnimation('in');\n  };\n  var handlePressOut = function handlePressOut() {\n    runElevationAnimation('out');\n  };\n  var total = React.Children.count(children);\n  var siblings = React.Children.map(children, function (child) {\n    return React.isValidElement(child) && child.type ? child.type.displayName : null;\n  });\n  var computedElevation = dark && isAdaptiveMode ? elevationDarkAdaptive : elevation;\n  var _getCardColors = getCardColors({\n      theme: theme,\n      mode: cardMode\n    }),\n    backgroundColor = _getCardColors.backgroundColor,\n    themedBorderColor = _getCardColors.borderColor;\n  var _ref2 = StyleSheet.flatten(style) || {},\n    _ref2$borderRadius = _ref2.borderRadius,\n    borderRadius = _ref2$borderRadius === void 0 ? (isV3 ? 3 : 1) * roundness : _ref2$borderRadius,\n    _ref2$borderColor = _ref2.borderColor,\n    borderColor = _ref2$borderColor === void 0 ? themedBorderColor : _ref2$borderColor;\n  return React.createElement(Surface, _extends({\n    style: [{\n      borderRadius: borderRadius\n    }, isV3 && !isMode('elevated') && {\n      backgroundColor: backgroundColor\n    }, !isV3 && isMode('outlined') ? styles.resetElevation : {\n      elevation: computedElevation\n    }, style],\n    theme: theme\n  }, isV3 && {\n    elevation: isMode('elevated') ? computedElevation : 0\n  }, {\n    testID: testID + \"-container\"\n  }, rest), isMode('outlined') && React.createElement(View, {\n    pointerEvents: \"none\",\n    testID: testID + \"-outline\",\n    style: [{\n      borderRadius: borderRadius,\n      borderColor: borderColor\n    }, styles.outline]\n  }), React.createElement(TouchableWithoutFeedback, {\n    delayPressIn: 0,\n    disabled: !(onPress || onLongPress),\n    delayLongPress: delayLongPress,\n    onLongPress: onLongPress,\n    onPress: onPress,\n    onPressIn: onPress || onLongPress ? handlePressIn : undefined,\n    onPressOut: onPress || onLongPress ? handlePressOut : undefined,\n    testID: testID,\n    accessible: accessible\n  }, React.createElement(View, {\n    style: [styles.innerContainer, contentStyle]\n  }, React.Children.map(children, function (child, index) {\n    return React.isValidElement(child) ? React.cloneElement(child, {\n      index: index,\n      total: total,\n      siblings: siblings\n    }) : child;\n  }))));\n};\nCard.Content = CardContent;\nCard.Actions = CardActions;\nCard.Cover = CardCover;\nCard.Title = CardTitle;\nvar styles = StyleSheet.create({\n  innerContainer: {\n    flexShrink: 1\n  },\n  outline: {\n    borderWidth: 1,\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    zIndex: 2\n  },\n  resetElevation: {\n    elevation: 0\n  }\n});\nexport default Card;","map":{"version":3,"mappings":"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","names":["React","useInternalTheme","Surface","CardActions","CardContent","CardCover","CardTitle","getCardColors","Card","_ref","elevation","cardElevation","onLongPress","delayLongPress","onPress","mode","cardMode","children","style","contentStyle","themeOverrides","theme","testID","accessible","rest","isMode","useCallback","modeToCompare","useRef","Animated","Value","current","elevationDarkAdaptive","animation","dark","roundness","isV3","prevDarkRef","useEffect","prevDark","isAdaptiveMode","animationDuration","scale","setValue","runElevationAnimation","pressType","isPressTypeIn","timing","toValue","duration","useNativeDriver","start","handlePressIn","handlePressOut","total","Children","count","siblings","map","child","isValidElement","type","displayName","computedElevation","backgroundColor","themedBorderColor","borderColor","StyleSheet","flatten","borderRadius","styles","resetElevation","View","pointerEvents","outline","TouchableWithoutFeedback","delayPressIn","disabled","onPressIn","undefined","onPressOut","innerContainer","index","cloneElement","Content","Actions","Cover","Title","create","flexShrink","borderWidth","position","width","height","zIndex"],"sourceRoot":"../../src","sources":["Card.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}